package ${packageName};

import javax.inject.Inject;
import javax.validation.Valid;
import javax.servlet.http.HttpServletRequest;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import cn.enilu.flash.common.controller.BaseController;
import cn.enilu.flash.core.db.Pagination;
import cn.enilu.flash.core.lang.Beans;
import cn.enilu.flash.core.util.JsonResponse;
import ${table.EntityFullClassName};
import ${table.ServiceFullClassName};


@Controller
@RequestMapping("${table.UriPrefix}")
public class ${table.ControllerClassName} extends BaseController {

	@Inject
	private ${table.ServiceClassName} ${table.ServiceInstanceName};

	@RequestMapping(method = RequestMethod.GET)
	public String index(HttpServletRequest request, Model model) {
		Pagination<${table.EntityClassName}> ${table.EntityInstancesName} = ${table.ServiceInstanceName}.search(getQueryForm(request));
		model.addAttribute("${table.EntityInstancesName}", ${table.EntityInstancesName});
		return "${table.ViewBasePath}/index";
	}

	// new是关键字，用new0代替。
	@RequestMapping(value = "new", method = RequestMethod.GET)
	public String new0(Model model) {
		model.addAttribute("${table.EntityInstanceName}", new ${table.EntityClassName}());
		return "${table.ViewBasePath}/new";
	}

	@RequestMapping(method = RequestMethod.POST)
	public String create(@Valid ${table.EntityClassName} ${table.EntityInstanceName}, BindingResult result, Model model,
			RedirectAttributes redirectAttrs) {
		model.addAttribute("${table.EntityInstanceName}", ${table.EntityInstanceName});
		if (result.hasErrors()) {
			return "${table.ViewBasePath}/new";
		}

		${table.ServiceInstanceName}.create(${table.EntityInstanceName});
		redirectAttrs.addFlashAttribute("message", "创建成功!");
		return "redirect:/${table.ViewBasePath}/" + ${table.EntityInstanceName}.getId();
	}

	@RequestMapping(value = "/{id:^\\d+$}", method = RequestMethod.GET)
	public String show(@PathVariable("id") Long id, Model model) {
		${table.EntityClassName} ${table.EntityInstanceName} = ${table.ServiceInstanceName}.find(id);
		model.addAttribute("${table.EntityInstanceName}", ${table.EntityInstanceName});
		return "${table.ViewBasePath}/show";
	}

	@RequestMapping(value = "/{id:^\\d+$}/edit", method = RequestMethod.GET)
	public String edit(@PathVariable("id") Long id, Model model) {
		${table.EntityClassName} ${table.EntityInstanceName} = ${table.ServiceInstanceName}.find(id);
		model.addAttribute("${table.EntityInstanceName}", ${table.EntityInstanceName});
		return "${table.ViewBasePath}/edit";
	}

	@RequestMapping(value = "/{id:^\\d+$}", method = RequestMethod.PUT)
	public String update(@PathVariable("id") Long id, ${table.EntityClassName} input, Model model) {
		${table.EntityClassName} ${table.EntityInstanceName} = ${table.ServiceInstanceName}.find(id); 
		Beans.extend(${table.EntityInstanceName}, input, ${table.LabeledColumnNamesString});
		${table.ServiceInstanceName}.update(${table.EntityInstanceName});
		return "redirect:/${table.ViewBasePath}/" + id;
	}

	@RequestMapping(value = "/{id:^\\d+$}", method = RequestMethod.DELETE)
	public @ResponseBody
	JsonResponse destroy(@PathVariable("id") Long id,
			RedirectAttributes redirectAttrs) {
		${table.EntityClassName} ${table.EntityInstanceName} = ${table.ServiceInstanceName}.find(id);
		${table.ServiceInstanceName}.destroy(${table.EntityInstanceName});
		String message = "删除成功!";
		redirectAttrs.addFlashAttribute("message", message);

		return new JsonResponse(true, message);
	}

}
